name: CI/CD Stage

on:
  push:
    branches:
      - stage
    paths:
      - 'be-core/**'
      - 'worker/**'

jobs:
  deploy:
    runs-on: [self-hosted, stage]

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Detect changes
        id: changes
        run: |
          git fetch origin stage
          BE=$(git diff --name-only origin/stage HEAD | grep '^be-core/' || true)
          WK=$(git diff --name-only origin/stage HEAD | grep '^worker/' || true)
          echo "BE_CORE_CHANGED=$BE" >> $GITHUB_ENV
          echo "WORKER_CHANGED=$WK" >> $GITHUB_ENV
          # fallback: build paksa kalau kosong (misalnya CI pertama)
          if [ -z "$BE" ]; then echo "FORCE_BUILD_BE_CORE=true" >> $GITHUB_ENV; else echo "FORCE_BUILD_BE_CORE=false" >> $GITHUB_ENV; fi
          if [ -z "$WK" ]; then echo "FORCE_BUILD_WORKER=true" >> $GITHUB_ENV; else echo "FORCE_BUILD_WORKER=false" >> $GITHUB_ENV; fi

      # --- BE-CORE ---
      - name: 🗑 Remove old be-core image
        if: env.BE_CORE_CHANGED != '' || env.FORCE_BUILD_BE_CORE == 'true'
        run: docker rmi be-core-stage:latest || true

      - name: 🛠 Build new be-core image
        if: env.BE_CORE_CHANGED != '' || env.FORCE_BUILD_BE_CORE == 'true'
        run: |
          echo "${{ secrets.BE_CORE_STAGE_ENV }}" > ./be-core/.env
          docker build -t be-core-stage:latest ./be-core

      # --- WORKER ---
      - name: 🗑 Remove old worker image
        if: env.WORKER_CHANGED != '' || env.FORCE_BUILD_WORKER == 'true'
        run: docker rmi worker-stage:latest || true

      - name: 🛠 Build new worker image
        if: env.WORKER_CHANGED != '' || env.FORCE_BUILD_WORKER == 'true'
        run: |
          echo "${{ secrets.WORKER_STAGE_ENV }}" > ./worker/.env
          docker build -t worker-stage:latest ./worker

      - name: 🧹 Remove dangling images
        run: |
          docker image prune -f

      # --- DEPLOY ---
      - name: 🐳 Deploy using docker-compose
        run: |
          docker compose -f docker-compose.stage.yml down
          docker compose -f docker-compose.stage.yml up -d
